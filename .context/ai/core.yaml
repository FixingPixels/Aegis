# Core AI Instruction Patterns
version: 1.0
description: Compressed format for Aegis AI instructions

# Memory Type Definitions
memory_types:
  semantic:
    understand: [knowledge, patterns, decisions, concepts, plans]
    action: [model_system, track_patterns, track_decisions, extract_tasks]
    triggers: [new_knowledge, pattern_identified, decision_made, plan_completed]
  
  episodic:
    understand: [history, changes, context]
    action: [timeline, events, outcomes]
    triggers: [session_end, major_change, decision_taken]
  
  procedural:
    understand: [steps, methods, dependencies, phases]
    action: [track_progress, monitor_deps, validate, create_tasks]
    triggers: [step_complete, status_change, dependency_update, phase_mapped]
  
  working:
    understand: [focus, changes, context]
    action: [track_refs, monitor_updates]
    triggers: [focus_shift, state_change]

# File Patterns
file_patterns:
  state:
    update_on: [knowledge_added, pattern_found, focus_shift]
    sections:
      knowledge_base: [concepts, patterns, decisions]
      active_dev: [focus, changes, needs]
      tech_state: [current, planned, deprecated]
      notes: [priority, references, patterns]
  
  session:
    update_on: [completion, major_change, decision]
    sections:
      context: [focus, tasks, state]
      progress: [changes, decisions, insights]
      next: [tasks, questions, plans]
  
  task:
    update_on: [progress, status_change, creation]
    sections:
      implementation: [steps, validation, status]
      progress: [current, blockers, deps]
      phase: [name, order, timeline]
  
  planning:
    update_on: [completion, phase_defined, task_created]
    sections:
      goals: [objectives, requirements, criteria]
      approach: [strategy, architecture, patterns]
      implementation: [phases, steps, timeline]
      tasks: [extracted, mapped, validated]

# Validation Rules
validation:
  memory_files:
    required: [title, memory_types, references, created, updated]
    optional: [priority, tags, aliases]
    front_matter:
      required: true
      format: yaml
      delimiter: "---"
      validation:
        - check: exists
          error: "Front matter missing"
        - check: format
          error: "Invalid YAML format"
        - check: required_fields
          error: "Missing required fields"
    memory_types:
      validate:
        - allowed_types: [semantic, episodic, procedural, working]
        - min_types: 1
        - max_types: 3
        - compatibility: 
            semantic: [procedural, working]
            episodic: [semantic, working]
            procedural: [semantic, working]
            working: [semantic, procedural, episodic]
  
  tasks:
    fields: [id, created, updated, status, phase]
    statuses: [planned, active, completed, blocked]
    naming: "NN_phase_name"
    creation:
      from_plan: [extract_phase, set_status, link_deps]
      validate: [unique_id, valid_phase, memory_types]
    front_matter:
      additional_required: [priority, id]
      id_format: "TASK-NNN"
      priority_values: [high, medium, low]
  
  decisions:
    fields: [id, created, updated, status]
    statuses: [proposed, accepted, deprecated, superseded]
    triggers: [arch_change, tech_choice, pattern_set, security]
    front_matter:
      additional_required: [impact, alternatives_considered]
  
  sessions:
    fields: [id, date, duration, focus]
    front_matter:
      additional_required: [participants, objectives]

# Validation Hooks
validation_hooks:
  pre_save:
    - check: front_matter_exists
      action: validate_front_matter
    - check: required_fields
      action: validate_fields
    - check: memory_types
      action: validate_memory_types
  
  post_save:
    - check: references_valid
      action: validate_references
    - check: status_consistency
      action: validate_status

# Error Handling
error_handling:
  validation_errors:
    front_matter_missing:
      severity: error
      message: "Front matter is required and must be enclosed in '---'"
      action: block_save
    
    invalid_memory_types:
      severity: error
      message: "Invalid memory types specified"
      action: block_save
    
    missing_required_fields:
      severity: error
      message: "Missing required fields in front matter"
      action: block_save
    
    invalid_references:
      severity: warning
      message: "Invalid references detected"
      action: warn_user

# State Management
state_rules:
  transitions:
    task:
      plan_to_tasks: [extract_phases, create_tasks, link_deps]
      planned_to_active: [verify_deps, update_status]
      active_to_complete: [validate_done, update_refs]
      active_to_blocked: [record_blockers, notify]
    
    decision:
      proposed_to_accepted: [validate, update_refs]
      accepted_to_deprecated: [record_reason, update_deps]

  consistency:
    check: [file_exists, valid_refs, status_match]
    maintain: [cross_refs, timestamps, history]
    task_creation: [phase_order, unique_ids, valid_refs] 